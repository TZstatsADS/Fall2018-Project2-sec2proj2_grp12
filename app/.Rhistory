shiny::runApp()
install.packages("Esdat")
install.packages("Ecdat")
knitr::opts_chunk$set(echo = TRUE)
library(Ecdat)
data(CPScch3)
male.earnings = CPSch3[CPSch3[,3] == "male",2]
library(MASS)
par(mfrow=c(1,1))
boxcox(male.earnings~1)
boxcox(male.earnings~1,lambda=seq(0.3,0.45,1/100))
library(Ecdat)
data(CPScch3)
male.earnings <- CPSch3[CPSch3[,3] == "male",2]
library(MASS)
par(mfrow=c(1,1))
boxcox(male.earnings~1)
boxcox(male.earnings~1,lambda=seq(0.3,0.45,1/100))
bc <- boxcox(male.earnings~1,lambda = seq(0.3,0.45,by=1/100),interp=FALSE)
bc <- boxcox(male.earnings~1,lambda = seq(0.3,0.45,by=1/100),interp=FALSE)
?boxcox
ind <- (bc$y==max(bc$y))
ind2 <- (bc$y>max(bc$y)-qchisq(0.95,df=1)/2)
bc$x[ind]
bc$x[ind2]
ind3 <- (bc$y>max(bc$y)-qchisq(0.99,df=1)/2)
bc$x[ind3]
install.packages("fGarch")
library("fGarch")
library("fGarch")
fit <- sstdFit(male.earnings,hessian=TRUE)
library("fGarch")
fit <- sstdFit(male.earnings,hessian=TRUE)
fit
?sstdFit
fit$estimate
summary(fit)
fit$par
library("fGarch")
fit <- sstdFit(male.earnings,hessian=TRUE)
fit
library(fGarch)
fit <- sstdFit(male.earnings,hessian=TRUE)
fit
sstdFit
names(fit)
?ssdFit
density(male.earnings)
plot(density(male.earnings))
plot(density(male.earnings))
plot(fit)
plot(density(male.earnings))
plot(fit$estimate)
?dsstd
para <- fit$estimate
x <- seq(0,max(male.earnings),length.out=100)
plot(density(male.earnings))
lines(x,dsstd(x,mean=para[1],sd=para[2],nu=para[3],xi=para[4]),lty=5)
para <- fit$estimate
x <- seq(0,max(male.earnings),length.out=100)
plot(density(male.earnings),main="pdf of Male Earnings")
lines(x,dsstd(x,mean=para[1],sd=para[2],nu=para[3],xi=para[4]),lty=5)
legend("topright",c("kernel density estimate","skewed t-density"),lty=c(1,5))
para <- fit$estimate
x <- seq(0,max(male.earnings),length.out=1000)
plot(density(male.earnings),main="pdf of Male Earnings")
lines(x,dsstd(x,mean=para[1],sd=para[2],nu=para[3],xi=para[4]),lty=5)
legend("topright",c("kernel density estimate","skewed t-density"),lty=c(1,5))
fit2 <- sgedFit(male.earnings)
para <- fit$estimate
x <- seq(0,max(male.earnings),length.out=1000)
plot(density(male.earnings),main="Male Earnings")
lines(x,dsstd(x,mean=para[1],sd=para[2],nu=para[3],xi=para[4]),lty=5)
legend("topright",c("kernel density estimate","skewed t-density"),lty=c(1,5))
?sgedFit
fit2 <- sgedFit(male.earnings)
para2 <- fit2$par
x <- seq(0,max(male.earnings),length.out=1000)
plot(density(male.earnings),main="Male Earnings")
lines(x,dsged(x,mean=para2[1],sd=para2[2],nu=para2[3],xi=para2[4]),lty=5)
legend("topright",c("kernel density estimate","skewed GED-density"),lty=c(1,5))
fit2 <- sgedFit(male.earnings)
para2 <- fit2$par
x <- seq(0,max(male.earnings),length.out=1000)
plot(density(male.earnings),main="Male Earnings")
lines(x,dsged(x,mean=para2[1],sd=para2[2],nu=para2[3],xi=para2[4]),lty=5)
lines(x,dsstd(x,mean=para[1],sd=para[2],nu=para[3],xi=para[4]),lty=10)
legend("topright",c("kernel density estimate","skewed GED-density"),lty=c(1,5))
fit2 <- sgedFit(male.earnings)
para2 <- fit2$par
x <- seq(0,max(male.earnings),length.out=1000)
plot(density(male.earnings),main="Male Earnings")
lines(x,dsged(x,mean=para2[1],sd=para2[2],nu=para2[3],xi=para2[4]),lty=5)
lines(x,dsstd(x,mean=para[1],sd=para[2],nu=para[3],xi=para[4]),col="red")
legend("topright",c("kernel density estimate","skewed GED-density"),lty=c(1,5))
fit2 <- sgedFit(male.earnings)
para2 <- fit2$par
x <- seq(0,max(male.earnings),length.out=1000)
plot(density(male.earnings),main="Male Earnings")
lines(x,dsged(x,mean=para2[1],sd=para2[2],nu=para2[3],xi=para2[4]),lty=5)
lines(x,dsstd(x,mean=para[1],sd=para[2],nu=para[3],xi=para[4]),col="red")
legend("topright",c("kernel density estimate","skewed GED-density","skewed t-density"),lty=c(1,5,1),col=c("black","black","red"))
fit2 <- sgedFit(male.earnings)
para2 <- fit2$par
x <- seq(0,max(male.earnings),length.out=1000)
plot(density(male.earnings),main="Male Earnings")
lines(x,dsged(x,mean=para2[1],sd=para2[2],nu=para2[3],xi=para2[4]),lty=5,col="blue")
lines(x,dsstd(x,mean=para[1],sd=para[2],nu=para[3],xi=para[4]),col="red")
legend("topright",c("kernel density estimate","skewed GED-density","skewed t-density"),lty=c(1,5,1),col=c("black","blue","red"))
library(fGarch)
fit <- sstdFit(male.earnings,hessian=TRUE)
fit$estimate
data(Garch, package = "Ecdat")
data(EuStockMarkets)
Y = diff(log(EuStockMarkets[ ,1])) # DAX
##### std #####
loglik_std = function(x) {
f = -sum(dstd(Y, x[1], x[2], x[3], log = TRUE))
f}
start = c(mean(Y), sd(Y), 4)
fit_std = optim(start, loglik_std, method = "L-BFGS-B",
lower = c(-0.1, 0.001, 2.1),
upper = c(0.1, 1, 20), hessian = TRUE)
cat("MLE =", round(fit_std$par, digits = 5))
minus_logL_std = fit_std$value # minus the log-likelihood
AIC_std = 2 * minus_logL_std + 2 * length(fit_std$par)
data(Garch, package = "Ecdat")
data(EuStockMarkets)
Y = diff(log(EuStockMarkets[ ,1])) # DAX
##### std #####
loglik_std = function(x) {
f = -sum(dstd(Y, x[1], x[2], x[3], log = TRUE))
f}
start = c(mean(Y), sd(Y), 4)
fit_std = optim(start, loglik_std, method = "L-BFGS-B",
lower = c(-0.1, 0.001, 2.1),
upper = c(0.1, 1, 20), hessian = TRUE)
cat("MLE =", round(fit_std$par, digits = 5))
minus_logL_std = fit_std$value # minus the log-likelihood
AIC_std = 2 * minus_logL_std + 2 * length(fit_std$par)
AIC_std
minus_logL_std = fit_std$value # minus the log-likelihood
AIC_std = 2 * minus_logL_std + 2 * length(fit_std$par)
AIC_std
?dstd
data(Garch, package = "Ecdat")
data(EuStockMarkets)
Y = diff(log(EuStockMarkets[ ,1])) # DAX
##### std #####
loglik_std = function(x) {
f = -sum(dsstd(Y, x[1], x[2], x[3], log = TRUE))
f}
start = c(mean(Y), sd(Y), 4)
fit_std = optim(start, loglik_std, method = "L-BFGS-B",
lower = c(-0.1, 0.001, 2.1),
upper = c(0.1, 1, 20), hessian = TRUE)
cat("MLE =", round(fit_std$par, digits = 5))
##### std #####
loglik_sstd = function(x) {
f = -sum(dsstd(Y, x[1], x[2], x[3],x[4], log = TRUE))
f}
start = c(mean(Y), sd(Y), 4,1)
fit_sstd = optim(start, loglik_sstd, method = "L-BFGS-B",
lower = c(-0.1, 0.001, 2.1,0.25),
upper = c(0.1, 1, 20,4), hessian = TRUE)
cat("MLE =", round(fit_std$par, digits = 5))
##### std #####
loglik_sstd = function(x) {
f = -sum(dsstd(Y, x[1], x[2], x[3],x[4], log = TRUE))
f}
start = c(mean(Y), sd(Y), 4,1)
fit_sstd = optim(start, loglik_sstd, method = "L-BFGS-B",
lower = c(-0.1, 0.001, 2.1,0.25),
upper = c(0.1, 1, 20,4), hessian = TRUE)
cat("MLE =", round(fit_sstd$par, digits = 5))
minus_logL_sstd = fit_sstd$value # minus the log-likelihood
AIC_sstd = 2 * minus_logL_sstd + 2 * length(fit_sstd$par)
AIC_std
minus_logL_sstd = fit_sstd$value # minus the log-likelihood
AIC_sstd = 2 * minus_logL_sstd + 2 * length(fit_sstd$par)
AIC_sstd
data(Garch, package = "Ecdat")
data(EuStockMarkets)
Y = diff(log(EuStockMarkets[ ,1])) # DAX
##### std #####
loglik_std = function(x) {
f = -sum(dstd(Y, x[1], x[2], x[3], log = TRUE))
f}
start = c(mean(Y), sd(Y), 4)
fit_std = optim(start, loglik_std, method = "L-BFGS-B",
lower = c(-0.1, 0.001, 2.1),
upper = c(0.1, 1, 20), hessian = TRUE)
cat("MLE =", round(fit_std$par, digits = 5))
1/4*((1.5^2)*(0.12^2)+0.08^2)+1/4*((1.8^2)*(0.12^2)+0.1^2)+1/2*1.5*1.8*0.12^2
sqrt(1/4*((1.5^2)*(0.12^2)+0.08^2)+1/4*((1.8^2)*(0.12^2)+0.1^2)+1/2*1.5*1.8*0.12^2)
knitr::opts_chunk$set(echo = TRUE)
data101820 <- data[data$Time==10|data$Time==18|data$Time==20,]
#(a)
data <- ChickWeight
data101820 <- data[data$Time==10|data$Time==18|data$Time==20,]
bw <- data[data$Time==0,c(1,3)]
#(a)
data <- ChickWeight
data101820 <- data[data$Time==10|data$Time==18|data$Time==20,]
bw <- data[data$Time==0,c(1,3)]
colnames(bw)[1] <- "bw"
data101820$Time <- as.factor(data101820$Time)
#(a)
data <- ChickWeight
data101820 <- data[data$Time==10|data$Time==18|data$Time==20,]
bw <- data[data$Time==0,c(1,3)]
colnames(bw)[1] <- "bw"
data1 <- merge(data101820,bw)
data1$Time <- as.factor(data101820$Time)
data1
fit1 <- aov(weight~bw+Diet,data1[data1$Time==10,])
fit1 <- aov(weight~bw+Diet,data1[data1$Time==10,])
fit2 <- aov(weight~bw+Diet,data1[data1$Time==18,])
fit3 <- aov(weight~bw+Diet,data1[data1$Time==20,])
fit1 <- aov(weight~bw+Diet,data1[data1$Time==10,])
fit2 <- aov(weight~bw+Diet,data1[data1$Time==18,])
fit3 <- aov(weight~bw+Diet,data1[data1$Time==20,])
summary(fit1)
summary(fit2)
summary(fit3)
summary(fit2)
summary(fit3)
data2 <- data101820[data101820$Chick %in% as.numeric(names(table(data101820$Chick)[table(data101820$Chick)==3])),]
install.packages("nlme")
library(nlme)
library(nlme)
fit.csc <- gls(weight ~bw+Diet*Time,data=data2,corr=corCompSymm(form=~1|Chick))
library(nlme)
fit.csc <- gls(weight ~bw+Diet*Time,data=data2,corr=corCompSymm(form=~1|Chick))
library(nlme)
fit.csc <- gls(weight ~ bw+Diet*Time,data=data2,corr=corCompSymm(form=~1|Chick))
data2 <- data101820[data101820$Chick %in% as.numeric(names(table(data101820$Chick)[table(data101820$Chick)==3])),]
data2
library(nlme)
fit.csc <- gls(weight ~ bw+Diet*Time,data=data2,corr=corCompSymm(form=~1|Chick))
#(a)
data <- ChickWeight
data101820 <- data[data$Time==10|data$Time==18|data$Time==20,]
bw <- data[data$Time==0,c(1,3)]
colnames(bw)[1] <- "bw"
data1 <- merge(data101820,bw)
data1$Time <- as.factor(data101820$Time)
library(nlme)
fit.csc <- gls(weight ~ bw+Diet*Time,data=data2,corr=corCompSymm(form=~1|Chick))
?gls
View(bw)
clear all
clc
rm(list=ls())
#(a)
data <- ChickWeight
data101820 <- data[data$Time==10|data$Time==18|data$Time==20,]
bw <- data[data$Time==0,c(1,3)]
colnames(bw)[1] <- "bw"
data1 <- merge(data101820,bw)
data1$Time <- as.factor(data101820$Time)
fit1 <- aov(weight~bw+Diet,data1[data1$Time==10,])
fit2 <- aov(weight~bw+Diet,data1[data1$Time==18,])
fit3 <- aov(weight~bw+Diet,data1[data1$Time==20,])
summary(fit1)
summary(fit2)
summary(fit3)
data2 <- data101820[data101820$Chick %in% as.numeric(names(table(data101820$Chick)[table(data101820$Chick)==3])),]
library(nlme)
fit.csc <- gls(weight ~ bw+Diet*Time,data=data2,corr=corCompSymm(form=~1|Chick))
#(a)
data <- ChickWeight
data101820 <- data[data$Time==10|data$Time==18|data$Time==20,]
bw <- data[data$Time==0,c(1,3)]
colnames(bw)[1] <- "bw1"
data1 <- merge(data101820,bw)
data1$Time <- as.factor(data101820$Time)
library(nlme)
fit.csc <- gls(weight ~ bw1+Diet*Time,data=data2,corr=corCompSymm(form=~1|Chick))
library(nlme)
fit.csc <- gls(weight ~bw+Diet*Time,data=data2,corr=corCompSymm(form=~1|Chick))
#(a)
data <- ChickWeight
data101820 <- data[data$Time==10|data$Time==18|data$Time==20,]
bw <- data[data$Time==0,c(1,3)]
colnames(bw)[1] <- "bw1"
data1 <- merge(data101820,bw)
data1$Time <- as.factor(data101820$Time)
fit1 <- aov(weight~bw+Diet,data1[data1$Time==10,])
fit1 <- aov(weight~bw1+Diet,data1[data1$Time==10,])
fit2 <- aov(weight~bw1+Diet,data1[data1$Time==18,])
fit3 <- aov(weight~bw1+Diet,data1[data1$Time==20,])
summary(fit1)
summary(fit2)
summary(fit3)
data2 <- data101820[data101820$Chick %in% as.numeric(names(table(data101820$Chick)[table(data101820$Chick)==3])),]
library(nlme)
fit.csc <- gls(weight ~bw1+Diet*Time,data=data2,corr=corCompSymm(form=~1|Chick))
#(a)
data <- ChickWeight
data101820 <- data[data$Time==10|data$Time==18|data$Time==20,]
bw <- data[data$Time==0,c(1,3)]
colnames(bw)[1] <- "bw1"
data1 <- merge(data101820,bw1)
#(a)
data <- ChickWeight
data101820 <- data[data$Time==10|data$Time==18|data$Time==20,]
bw <- data[data$Time==0,c(1,3)]
colnames(bw)[1] <- "bw"
data1 <- merge(data101820,bw)
data1$Time <- as.factor(data101820$Time)
fit1 <- aov(weight~bw+Diet,data1[data1$Time==10,])
fit2 <- aov(weight~bw+Diet,data1[data1$Time==18,])
fit3 <- aov(weight~bw+Diet,data1[data1$Time==20,])
summary(fit1)
#(a)
data <- ChickWeight
data101820 <- data[data$Time==10|data$Time==18|data$Time==20,]
bw <- data[data$Time==0,c(1,3)]
colnames(bw)[1] <- "bw"
data1 <- merge(data101820,bw)
data1$Time <- as.factor(data101820$Time)
data2 <- data101820[data101820$Chick %in% as.numeric(names(table(data101820$Chick)[table(data101820$Chick)==3])),]
library(nlme)
fit.csc <- gls(weight ~bw1+Diet*Time,data=data2,corr=corCompSymm(form=~1|Chick))
library(nlme)
fit.csc <- gls(weight ~bw+Diet*Time,data=data2,corr=corCompSymm(form=~1|Chick))
bw
class(bw)
